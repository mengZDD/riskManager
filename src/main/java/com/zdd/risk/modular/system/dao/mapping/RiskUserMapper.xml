<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zdd.risk.modular.system.dao.RiskUserMapper" >
  <resultMap id="BaseResultMap" type="com.zdd.risk.common.persistence.model.RiskUser" >
    <id column="userid" property="userid" jdbcType="VARCHAR" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="orderid" property="orderid" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="idcard_no" property="idcardNo" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="source" property="source" jdbcType="INTEGER" />
    <result column="accredit" property="accredit" jdbcType="INTEGER" />
    <result column="credit" property="credit" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    <result column="creattime" property="creattime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userid, cid, orderid, tel, name, idcard_no as idcardNo, type, source, accredit, credit, update_time as updateTime,
    creattime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zdd.risk.common.persistence.model.RiskUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from risk_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from risk_user
    where userid = #{userid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from risk_user
    where userid = #{userid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zdd.risk.common.persistence.model.RiskUserExample" >
    delete from risk_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zdd.risk.common.persistence.model.RiskUser" >
    insert into risk_user (userid, cid, orderid, 
      tel, name, idcard_no, 
      type, source, accredit, 
      credit, update_time, creattime
      )
    values (#{userid,jdbcType=VARCHAR}, #{cid,jdbcType=INTEGER}, #{orderid,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{idcardNo,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{source,jdbcType=INTEGER}, #{accredit,jdbcType=INTEGER}, 
      #{credit,jdbcType=INTEGER}, #{updateTime,jdbcType=VARCHAR}, #{creattime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zdd.risk.common.persistence.model.RiskUser" >
    insert into risk_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="orderid != null" >
        orderid,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="idcardNo != null" >
        idcard_no,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="accredit != null" >
        accredit,
      </if>
      <if test="credit != null" >
        credit,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="creattime != null" >
        creattime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcardNo != null" >
        #{idcardNo,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        #{source,jdbcType=INTEGER},
      </if>
      <if test="accredit != null" >
        #{accredit,jdbcType=INTEGER},
      </if>
      <if test="credit != null" >
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="creattime != null" >
        #{creattime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zdd.risk.common.persistence.model.RiskUserExample" resultType="java.lang.Integer" >
    select count(*) from risk_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update risk_user
    <set >
      <if test="record.userid != null" >
        userid = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null" >
        orderid = #{record.orderid,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardNo != null" >
        idcard_no = #{record.idcardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=INTEGER},
      </if>
      <if test="record.accredit != null" >
        accredit = #{record.accredit,jdbcType=INTEGER},
      </if>
      <if test="record.credit != null" >
        credit = #{record.credit,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.creattime != null" >
        creattime = #{record.creattime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update risk_user
    set userid = #{record.userid,jdbcType=VARCHAR},
      cid = #{record.cid,jdbcType=INTEGER},
      orderid = #{record.orderid,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      idcard_no = #{record.idcardNo,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      source = #{record.source,jdbcType=INTEGER},
      accredit = #{record.accredit,jdbcType=INTEGER},
      credit = #{record.credit,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=VARCHAR},
      creattime = #{record.creattime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zdd.risk.common.persistence.model.RiskUser" >
    update risk_user
    <set >
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        orderid = #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcardNo != null" >
        idcard_no = #{idcardNo,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="accredit != null" >
        accredit = #{accredit,jdbcType=INTEGER},
      </if>
      <if test="credit != null" >
        credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="creattime != null" >
        creattime = #{creattime,jdbcType=VARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zdd.risk.common.persistence.model.RiskUser" >
    update risk_user
    set cid = #{cid,jdbcType=INTEGER},
      orderid = #{orderid,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      idcard_no = #{idcardNo,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      source = #{source,jdbcType=INTEGER},
      accredit = #{accredit,jdbcType=INTEGER},
      credit = #{credit,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=VARCHAR},
      creattime = #{creattime,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=VARCHAR}
  </update>
  <select id="selectAll" resultType="Map">
    select
    <include refid="Base_Column_List" />
     from risk_user
  </select>
</mapper>