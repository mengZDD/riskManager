<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zdd.risk.modular.system.dao.RiskApproveMapper" >
  <resultMap id="BaseResultMap" type="com.zdd.risk.common.persistence.model.RiskApprove" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="orderid" property="orderid" jdbcType="VARCHAR" />
    <result column="idcard_no" property="idcardNo" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="guide_price" property="guidePrice" jdbcType="INTEGER" />
    <result column="guarantee" property="guarantee" jdbcType="INTEGER" />
    <result column="totalde_posit" property="totaldePosit" jdbcType="INTEGER" />
    <result column="reduction_ratio" property="reductionRatio" jdbcType="INTEGER" />
    <result column="credit_cost" property="creditCost" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="INTEGER" />
    <result column="periods" property="periods" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    <result column="creat_time" property="creatTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, orderid, idcard_no, username, tel, guide_price, guarantee, totalde_posit, reduction_ratio, 
    credit_cost, money, periods, status, update_time, creat_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zdd.risk.common.persistence.model.RiskApproveExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from risk_approve
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from risk_approve
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from risk_approve
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zdd.risk.common.persistence.model.RiskApproveExample" >
    delete from risk_approve
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zdd.risk.common.persistence.model.RiskApprove" >
    insert into risk_approve (id, orderid, idcard_no, 
      username, tel, guide_price, 
      guarantee, totalde_posit, reduction_ratio, 
      credit_cost, money, periods, 
      status, update_time, creat_time
      )
    values (#{id,jdbcType=INTEGER}, #{orderid,jdbcType=VARCHAR}, #{idcardNo,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{guidePrice,jdbcType=INTEGER}, 
      #{guarantee,jdbcType=INTEGER}, #{totaldePosit,jdbcType=INTEGER}, #{reductionRatio,jdbcType=INTEGER}, 
      #{creditCost,jdbcType=INTEGER}, #{money,jdbcType=INTEGER}, #{periods,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{updateTime,jdbcType=VARCHAR}, #{creatTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zdd.risk.common.persistence.model.RiskApprove" >
    insert into risk_approve
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderid != null" >
        orderid,
      </if>
      <if test="idcardNo != null" >
        idcard_no,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="tel != null" >
        tel,
      </if>
      <if test="guidePrice != null" >
        guide_price,
      </if>
      <if test="guarantee != null" >
        guarantee,
      </if>
      <if test="totaldePosit != null" >
        totalde_posit,
      </if>
      <if test="reductionRatio != null" >
        reduction_ratio,
      </if>
      <if test="creditCost != null" >
        credit_cost,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="periods != null" >
        periods,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="creatTime != null" >
        creat_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="idcardNo != null" >
        #{idcardNo,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="guidePrice != null" >
        #{guidePrice,jdbcType=INTEGER},
      </if>
      <if test="guarantee != null" >
        #{guarantee,jdbcType=INTEGER},
      </if>
      <if test="totaldePosit != null" >
        #{totaldePosit,jdbcType=INTEGER},
      </if>
      <if test="reductionRatio != null" >
        #{reductionRatio,jdbcType=INTEGER},
      </if>
      <if test="creditCost != null" >
        #{creditCost,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        #{money,jdbcType=INTEGER},
      </if>
      <if test="periods != null" >
        #{periods,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null" >
        #{creatTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zdd.risk.common.persistence.model.RiskApproveExample" resultType="java.lang.Integer" >
    select count(*) from risk_approve
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update risk_approve
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderid != null" >
        orderid = #{record.orderid,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardNo != null" >
        idcard_no = #{record.idcardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.guidePrice != null" >
        guide_price = #{record.guidePrice,jdbcType=INTEGER},
      </if>
      <if test="record.guarantee != null" >
        guarantee = #{record.guarantee,jdbcType=INTEGER},
      </if>
      <if test="record.totaldePosit != null" >
        totalde_posit = #{record.totaldePosit,jdbcType=INTEGER},
      </if>
      <if test="record.reductionRatio != null" >
        reduction_ratio = #{record.reductionRatio,jdbcType=INTEGER},
      </if>
      <if test="record.creditCost != null" >
        credit_cost = #{record.creditCost,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=INTEGER},
      </if>
      <if test="record.periods != null" >
        periods = #{record.periods,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.creatTime != null" >
        creat_time = #{record.creatTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update risk_approve
    set id = #{record.id,jdbcType=INTEGER},
      orderid = #{record.orderid,jdbcType=VARCHAR},
      idcard_no = #{record.idcardNo,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      guide_price = #{record.guidePrice,jdbcType=INTEGER},
      guarantee = #{record.guarantee,jdbcType=INTEGER},
      totalde_posit = #{record.totaldePosit,jdbcType=INTEGER},
      reduction_ratio = #{record.reductionRatio,jdbcType=INTEGER},
      credit_cost = #{record.creditCost,jdbcType=INTEGER},
      money = #{record.money,jdbcType=INTEGER},
      periods = #{record.periods,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=VARCHAR},
      creat_time = #{record.creatTime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zdd.risk.common.persistence.model.RiskApprove" >
    update risk_approve
    <set >
      <if test="orderid != null" >
        orderid = #{orderid,jdbcType=VARCHAR},
      </if>
      <if test="idcardNo != null" >
        idcard_no = #{idcardNo,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="guidePrice != null" >
        guide_price = #{guidePrice,jdbcType=INTEGER},
      </if>
      <if test="guarantee != null" >
        guarantee = #{guarantee,jdbcType=INTEGER},
      </if>
      <if test="totaldePosit != null" >
        totalde_posit = #{totaldePosit,jdbcType=INTEGER},
      </if>
      <if test="reductionRatio != null" >
        reduction_ratio = #{reductionRatio,jdbcType=INTEGER},
      </if>
      <if test="creditCost != null" >
        credit_cost = #{creditCost,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="periods != null" >
        periods = #{periods,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="creatTime != null" >
        creat_time = #{creatTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zdd.risk.common.persistence.model.RiskApprove" >
    update risk_approve
    set orderid = #{orderid,jdbcType=VARCHAR},
      idcard_no = #{idcardNo,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      guide_price = #{guidePrice,jdbcType=INTEGER},
      guarantee = #{guarantee,jdbcType=INTEGER},
      totalde_posit = #{totaldePosit,jdbcType=INTEGER},
      reduction_ratio = #{reductionRatio,jdbcType=INTEGER},
      credit_cost = #{creditCost,jdbcType=INTEGER},
      money = #{money,jdbcType=INTEGER},
      periods = #{periods,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>